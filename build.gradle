buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath('org.springframework.boot:spring-boot-gradle-plugin:1.5.2.RELEASE')
        classpath('com.github.newnewcoder:jboss-curl-deploy-gradle-plugin:1.0.0')
    }
}

apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'org.springframework.boot'
apply plugin: 'com.github.newnewcoder.jboss-curl-deploy-gradle-plugin'
apply plugin: 'idea'

war {
    archiveName = "demo.war"
}

jar {
    baseName = 'demo'
}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile("org.springframework.boot:spring-boot-starter-thymeleaf")
    compile("org.springframework.boot:spring-boot-starter-security")
    testCompile("junit:junit")
    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile("org.springframework.security:spring-security-test")
    //testCompile "com.codeborne:selenide:3.6"
    testCompile "org.seleniumhq.selenium:selenium-java:2.+"
    testCompile "org.assertj:assertj-core:1.5.0"
    providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")//for war
}

import static org.apache.tools.ant.taskdefs.condition.Os.*
test {
    ignoreFailures = true
    String driver = 'chromedriver-v2.29.exe'
    if (isFamily(FAMILY_MAC)) {
        driver = 'chromedriver_mac-v2.29'
    } else if (isFamily(FAMILY_UNIX)) {
        driver = 'chromedriver_linux-v2.29'
    }
    systemProperty('webdriver.chrome.driver', "${projectDir}/chromeDrivers/${driver}")
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.4'
}

springBoot {
    mainClass = "hello.Application"
}

jboss {
    host = 'jboss'
    port = '9990'
    user = 'admin'
    password = 'admin'
    warName = "demo.war"
    warPath = "${buildDir}/libs"
    debug = false
}

deploy.dependsOn war